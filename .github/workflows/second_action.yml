name: 2ndTestProject
on: [push, workflow_dispatch]
jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        # second_action folder working directory.
        working-directory: second_action
    steps:
      - name: Get Code
        uses: actions/checkout@v4.1.7
        
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            second_action:
              - 'second_action/**'

      - name: Install NodeJS
        if: steps.filter.outputs.second_action == 'true'
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 20

      - name: Install dependencies
        if: steps.filter.outputs.second_action == 'true'
        run: npm ci
        
      - name: Run tests
        if: steps.filter.outputs.second_action == 'true'
        run: npm test
  deploy:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        # second_action folder working directory.
        working-directory: second_action
    
    steps:
        - name: Get Code
          uses: actions/checkout@v4.1.7

        - uses: dorny/paths-filter@v3
          id: filter
          with:
            filters: |
              second_action:
                - 'second_action/**'
          
        - name: Install NodeJS
          if: steps.filter.outputs.second_action == 'true'
          uses: actions/setup-node@v4.0.2
          with:
            node-version: 20
        - name: Install dependencies
          if: steps.filter.outputs.second_action == 'true'
          run: npm ci
        - name: Build Project
          if: steps.filter.outputs.second_action == 'true'
          run: npm run build
        - name: Deploy
          if: steps.filter.outputs.second_action == 'true'
          run: echo "Deploying..."
  build_and_scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        # second_action folder working directory.
        working-directory: second_action
    steps:
      - name: Get Code
        uses: actions/checkout@v4.1.7

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            second_action:
              - 'second_action/**'
      
      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build Project
        run: npm run build

      - name: Print working directory and tree structure
        run: |
          echo "Current working directory:"
          pwd
          echo "Directory structure:"
          ls
       

      - name: Serve built app
        run: |
          npm run preview &
          echo $! > ./app_pid
          sleep 5

      # - name: Cool-down period - Avoid rate limiting
      #   run: sleep 60

      - name: Copy ZAP configuration file
        run: |
          mkdir -p zap
          cp zap-scan-rules.conf zap/
      - name: Print working directory and tree structure
        run: |
          echo "Current working directory:"
          pwd
          echo "Directory structure:"
          ls
      
      # - name: Print working directory and tree structure
      #   run: |
      #     echo "Current working directory:"
      #     pwd
      #     echo "Directory structure:"
      #     tree -L 3  # Shows directory structure up to 3 levels deep

      # - name: ZAP Scan
      #   uses: zaproxy/action-baseline@v0.12.0
      #   with:
      #     target: 'http://localhost:4173'  # Vite preview default port
      #     rules_file_name: 'zap/zap-scan-rules.conf'
      #     cmd_options: '-c /zap/wrk/zap/zap-scan-rules.conf'

      # - name: Stop preview server
      #   if: always()
      #   run: kill $(cat ./app_pid)

      # - name: Upload ZAP Scan Report
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: ZAP Scan Report
      #     path: zap-scan-results.html

