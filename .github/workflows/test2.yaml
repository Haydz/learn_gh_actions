name: Use OIDC Token to Assume Role and Access Secrets

on: 
  workflow_dispatch: # manually trigger

permissions:
  id-token: write
  contents: read

jobs:
  use-oidc-token:
    runs-on: ubuntu-latest
    steps:
      - name: Get OIDC Token
        id: get_token
        run: |
          echo "Fetching OIDC token..."
          OIDC_TOKEN=$(curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com")
          TOKEN=$(echo $OIDC_TOKEN | jq -r '.value')
          echo "TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Assume Role with OIDC Token
        id: assume_role
        run: |
          echo "Assuming role with OIDC token..."
          CREDENTIALS=$(aws sts assume-role-with-web-identity --role-arn arn:aws:iam::766537220951:role/GithubActionsTest --role-session-name GitHubActionsSession --web-identity-token ${{ env.TOKEN }} --duration-seconds 3600 2>&1)
          if echo "$CREDENTIALS" | jq . > /dev/null 2>&1; then
            export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r '.Credentials.AccessKeyId')
            export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r '.Credentials.SecretAccessKey')
            export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r '.Credentials.SessionToken')
            echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
          else
            echo "Failed to assume role: $CREDENTIALS"
            exit 1
          fi

      - name: Pull secret from AWS Secrets Manager
        id: pull_secret
        run: |
          echo "Fetching secret..."
          secret=$(aws secretsmanager get-secret-value --secret-id mySecret --query 'SecretString' --output text)
          echo "secret=$secret" >> $GITHUB_ENV

      - name: Use secret
        run: echo "The secret is ${{ env.secret }}"
